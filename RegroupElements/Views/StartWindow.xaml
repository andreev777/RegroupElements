<Window x:Class="RegroupElements.Views.StartWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:viewmodel="clr-namespace:RegroupElements.ViewModel" 
        d:DataContext="{d:DesignInstance Type=viewmodel:DataManageVM}"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800" MinHeight="600" MinWidth="800"
        WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="CanResizeWithGrip"
        BorderBrush="#808080" BorderThickness="0.5" Background="#F6F6F6" Foreground="#1A1A1A">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" GlassFrameThickness="0,0,0,1" CornerRadius="0" ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AtomStyleLibrary;component/Dictionaries/Controls.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <SolidColorBrush x:Key="TextBox.Static.Border" Color="{StaticResource AtomGray700}"/>
            <SolidColorBrush x:Key="TextBox.Static.Background" Color="{StaticResource AtomWhite}"/>
            <SolidColorBrush x:Key="TextBox.Static.Foreground" Color="{StaticResource AtomGray900}"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="{StaticResource AtomGreen}"/>
            <SolidColorBrush x:Key="TextBox.MouseOver.Foreground" Color="{StaticResource AtomGray900}"/>
            <SolidColorBrush x:Key="TextBox.Focus.Border" Color="{StaticResource AtomGreen}"/>
            <SolidColorBrush x:Key="TextBox.Disabled.Border" Color="{StaticResource AtomGray200}"/>
            <Style x:Key="AtomTextBoxStyleCustom" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{StaticResource TextBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
                <Setter Property="Foreground" Value="{StaticResource TextBox.Static.Foreground}"/>
                <Setter Property="FontFamily" Value="{StaticResource Regular}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Padding" Value="10,0,0,0"/>
                <Setter Property="BorderThickness" Value="0.5"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="18" Height="36" SnapsToDevicePixels="true">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Disabled.Border}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                                    <Setter Property="Foreground" Value="{StaticResource TextBox.MouseOver.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <!--Необходимо для кнопки Закрыть-->
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static SystemCommands.CloseWindowCommand}" CanExecute="CommandBinding_CanExecute_1" Executed="CommandBinding_Executed_1" />
    </Window.CommandBindings>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="44"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="20"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="0.2*" MinWidth="120"/>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>

        <!--#region ШАПКА ПРИЛОЖЕНИЯ-->
        <Border Grid.Row="0" Grid.ColumnSpan="5" Background="Transparent" MouseDown="DragWithMouse" Height="44">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="44" MinWidth="44"/>
                </Grid.ColumnDefinitions>

                <Label Style="{StaticResource AtomLogoLabelStyle}"/>

                <TextBlock x:Name="tableHeaderTextBlock" Grid.Column="1"
                            Text="ОБЪЕДИНЕНИЕ ГРУПП" Style="{StaticResource HeaderFont}"
                            VerticalAlignment="Center" Padding="4,3,0,0"/>

                <TextBlock x:Name="activeDocTextBlock" Text="{Binding DocumentTitle}" Margin="280,3,0,0"
                           Grid.ColumnSpan="3" HorizontalAlignment="Left" VerticalAlignment="Center"
                           Style="{StaticResource RegularFont}"
                           Foreground="{StaticResource AtomGray700Brush}"/>

                <Button Style="{DynamicResource AtomCloseButtonStyle}" x:Name="closeButton" Grid.Column="2"
                        Command="{x:Static SystemCommands.CloseWindowCommand}"/>
            </Grid>
        </Border>
        <!--#endregion-->

        <TextBlock Text="ЭТАЖ" Grid.Row="2" Grid.Column="1" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource TitleFont}"/>
        <TextBlock Text="ИМЯ НОВОЙ ГРУППЫ" Grid.Row="2" Grid.Column="3" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource TitleFont}"/>

        <Button x:Name="helpButton" Grid.Row="2" Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="Описание"
                Style="{StaticResource AtomQuestionMarkStyle}" Click="helpButton_Click" Cursor="Hand"/>

        <Grid Grid.Row="3" Grid.Column="3" VerticalAlignment="Center" Margin="0,0,0,0">
            <TextBox x:Name="newGroupNameTextBox" Text="{Binding NewGroupName}"
                     HorizontalAlignment="Stretch" Style="{StaticResource AtomTextBoxStyleCustom}"
                     GotFocus="newGroupNameTextBox_GotFocus"
                     LostFocus="newGroupNameTextBox_LostFocus"/>

            <TextBlock x:Name="defaultTextBlock" Text="Введите имя новой группы" IsHitTestVisible="False"
                    VerticalAlignment="Center" Margin="15,0,0,0"
                    Style="{StaticResource RegularFont}" Foreground="{StaticResource AtomGray700Brush}"/>
        </Grid>
       
        <TextBlock Text="СПИСОК ГРУПП" Grid.Row="5" Grid.Column="3" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource TitleFont}"/>

        <StackPanel Grid.Row="5" Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0">
            <TextBlock x:Name="selectedGroupsTextBlock" Text="Выбрано групп:"
                        Margin="0,0,0,0"
                        Style="{StaticResource RegularFont}" Foreground="{StaticResource AtomGray900Brush}"/>
            <TextBlock x:Name="selectedGroupsCountTextBlock" Text="{Binding SelectedGroupsCount}"
                        Margin="5,0,0,0"
                        Style="{StaticResource RegularFont}" Foreground="{StaticResource AtomGray900Brush}"/>
            <TextBlock x:Name="slashTextBlock" Text="/"
                        Margin="5,0,0,0"
                        Style="{StaticResource RegularFont}" Foreground="{StaticResource AtomGray900Brush}"/>
            <TextBlock x:Name="groupsTotalCountTextBlock" Text="{Binding GroupsOnLevelTotalCount}"
                        Margin="5,0,0,0"
                        Style="{StaticResource RegularFont}" Foreground="{StaticResource AtomGray900Brush}"/>
        </StackPanel>

        <StackPanel Grid.Row="6" Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
            <Button x:Name="selectAllButton" Margin="0,0,10,0" Style="{StaticResource AtomSelectAllButtonStyle}" Command="{Binding SelectAllGroupsCommand}"/>
            <Button x:Name="selectNoneButton" Style="{StaticResource AtomSelectNoneButtonStyle}" Command="{Binding UnselectAllGroupsCommand}" Cursor="Hand"/>
        </StackPanel>

        <ListView x:Name="levelsListView" Grid.Row="3" Grid.Column="1" Grid.RowSpan="4" BorderThickness="0.5"
                  ItemsSource="{Binding GroupLevelCollection}"
                  Style="{StaticResource AtomStyleListViewWithCheckboxes}">
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <RadioButton Content="{Binding Path=Name}" IsChecked="{Binding Path=IsSelected, Mode=TwoWay}" 
                                             Command="{Binding Path=DataContext.SelectLevelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                             GroupName="levelsRadioGroup" Margin="5,3,5,3"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
        </ListView>

        <ListView x:Name="groupsListView" Grid.Row="6" Grid.Column="3"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  ItemsSource="{Binding GroupTypesCollection}"
                  Style="{StaticResource AtomStyleListViewWithCheckboxes}">
            <ListView.Resources>
                <Style TargetType="ListViewItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <CheckBox Content="{Binding Path=Name}" IsChecked="{Binding Path=IsSelected, Mode=TwoWay}"
                                          Command="{Binding Path=DataContext.SelectGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                                          Margin="5,3,5,3"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.Resources>
        </ListView>

        <CheckBox Content="Удалить выбранные группы" Grid.Row="7" Grid.Column="3" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                  IsChecked="{Binding DeleteGroupsAfterJoin, Mode=TwoWay}" 
                  ToolTip="Очистить проект от выбранных групп, если их экземпляры отсутствуют в пространстве модели"/>

        <StackPanel Grid.Row="8" Grid.Column="3" Orientation="Horizontal" FlowDirection="RightToLeft">
            <Button x:Name="createGroupButton" Content="ОБЪЕДИНИТЬ ГРУППЫ" VerticalAlignment="Center" Width="190"
                    Style="{StaticResource AtomGreenButtonStyle}"
                    Command="{Binding RegroupElementsCommand}"
                    IsDefault = "true"/>
        </StackPanel>
    </Grid>
</Window>